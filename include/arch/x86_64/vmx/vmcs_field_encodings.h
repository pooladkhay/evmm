#include <linux/types.h>

/*
 * Field Encoding-related structures and macros,
 * as defined in Intel SDM, 3C - Table 26-21
 */

enum evmm_vmcs_encoding_access_type {
	full = 0,
	high = 1,
};
enum evmm_vmcs_encoding_type {
	control = 0,
	vmexit_info,
	guest_state,
	host_state,
};
enum vmm_vmcs_encoding_width {
	word = 0,
	qword,
	dword,
	natural,
};

// Bit 12 (reserved) and bits 31:15 must be cleared, hence ( ... & 0x00006FFF ).
#define VMCS_ENCODE_COMPONENT(access_type, index, type, width)                 \
	(__u32)(((((access_type) & 0x1)) | (((index) & 0x1FF) << 1) |          \
		 (((type) & 0x3) << 10) | (((width) & 0x3) << 13)) &           \
		0x00006FFF)

#define VMCS_ENCODE_COMPONENT_FULL(index, type, width)                         \
	VMCS_ENCODE_COMPONENT(full, index, type, width)

#define VMCS_ENCODE_COMPONENT_FULL_16(index, type)                             \
	VMCS_ENCODE_COMPONENT_FULL(index, type, word)

#define VMCS_ENCODE_COMPONENT_FULL_32(index, type)                             \
	VMCS_ENCODE_COMPONENT_FULL(index, type, dword)

#define VMCS_ENCODE_COMPONENT_FULL_64(index, type)                             \
	VMCS_ENCODE_COMPONENT_FULL(index, type, qword)

#define VMCS_ENCODE_COMPONENT_FULL_NATURAL(index, type)                        \
	VMCS_ENCODE_COMPONENT_FULL(index, type, natural)

/*
 * Indices are defined in Intel SDM, Appendix B
 *
 * Fields ending with '_COND' only on processors that support them. Check
 * appendix B for more details.
 */

enum evmm_vmcs_guest_encodings {

	/* Guest natural-width fields - only full access */

	GUEST_CR0 = VMCS_ENCODE_COMPONENT_FULL_NATURAL(0, guest_state),
	GUEST_CR3 = VMCS_ENCODE_COMPONENT_FULL_NATURAL(1, guest_state),
	GUEST_CR4 = VMCS_ENCODE_COMPONENT_FULL_NATURAL(2, guest_state),
	GUEST_ES_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(3, guest_state),
	GUEST_CS_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(4, guest_state),
	GUEST_SS_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(5, guest_state),
	GUEST_DS_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(6, guest_state),
	GUEST_FS_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(7, guest_state),
	GUEST_GS_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(8, guest_state),
	GUEST_LDTR_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(9, guest_state),
	GUEST_TR_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(10, guest_state),
	GUEST_GDTR_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(11, guest_state),
	GUEST_IDTR_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(12, guest_state),
	GUEST_DR7 = VMCS_ENCODE_COMPONENT_FULL_NATURAL(13, guest_state),
	GUEST_RSP = VMCS_ENCODE_COMPONENT_FULL_NATURAL(14, guest_state),
	GUEST_RIP = VMCS_ENCODE_COMPONENT_FULL_NATURAL(15, guest_state),
	GUEST_RFLAGS = VMCS_ENCODE_COMPONENT_FULL_NATURAL(16, guest_state),
	GUEST_PENDING_DEBUG_EXCEPTION =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(17, guest_state),
	GUEST_IA32_SYSENTER_ESP =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(18, guest_state),
	GUEST_IA32_SYSENTER_EIP =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(19, guest_state),
	GUEST_IA32_S_CET_COND =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(20, guest_state),
	GUEST_SSP_COND = VMCS_ENCODE_COMPONENT_FULL_NATURAL(21, guest_state),
	GUEST_IA32_INTERRUPT_SSP_TABLE_ADDR_COND =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(22, guest_state),

	/* Guest 64-bit fields - both full and high access
	 *
	 * Only full access is defined since we are not supporting 32-bit
	 * systems.
	 */

	GUEST_VMCS_LINK_POINTER = VMCS_ENCODE_COMPONENT_FULL_64(0, guest_state),
	GUEST_IA32_DEBUGCTL = VMCS_ENCODE_COMPONENT_FULL_64(1, guest_state),
	GUEST_IA32_PAT_COND = VMCS_ENCODE_COMPONENT_FULL_64(2, guest_state),
	GUEST_IA32_EFER_COND = VMCS_ENCODE_COMPONENT_FULL_64(3, guest_state),
	GUEST_IA32_PERF_GLOBAL_CTRL_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(4, guest_state),
	GUEST_PDPTE0_COND = VMCS_ENCODE_COMPONENT_FULL_64(5, guest_state),
	GUEST_PDPTE1_COND = VMCS_ENCODE_COMPONENT_FULL_64(6, guest_state),
	GUEST_PDPTE2_COND = VMCS_ENCODE_COMPONENT_FULL_64(7, guest_state),
	GUEST_PDPTE3_COND = VMCS_ENCODE_COMPONENT_FULL_64(8, guest_state),
	GUEST_IA32_BNDCFGS_COND = VMCS_ENCODE_COMPONENT_FULL_64(9, guest_state),
	GUEST_IA32_RTIT_CTL_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(10, guest_state),
	GUEST_IA32_LBR_CTL_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(11, guest_state),
	GUEST_IA32_PKRS_COND = VMCS_ENCODE_COMPONENT_FULL_64(12, guest_state),

	/* Guest 32-bit fields - only full access */

	GUEST_ES_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(0, guest_state),
	GUEST_CS_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(1, guest_state),
	GUEST_SS_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(2, guest_state),
	GUEST_DS_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(3, guest_state),
	GUEST_FS_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(4, guest_state),
	GUEST_GS_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(5, guest_state),
	GUEST_LDTR_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(6, guest_state),
	GUEST_TR_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(7, guest_state),
	GUEST_GDTR_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(8, guest_state),
	GUEST_IDTR_LIMIT = VMCS_ENCODE_COMPONENT_FULL_32(9, guest_state),
	GUEST_ES_ACCESS_RIGHTS = VMCS_ENCODE_COMPONENT_FULL_32(10, guest_state),
	GUEST_CS_ACCESS_RIGHTS = VMCS_ENCODE_COMPONENT_FULL_32(11, guest_state),
	GUEST_SS_ACCESS_RIGHTS = VMCS_ENCODE_COMPONENT_FULL_32(12, guest_state),
	GUEST_DS_ACCESS_RIGHTS = VMCS_ENCODE_COMPONENT_FULL_32(13, guest_state),
	GUEST_FS_ACCESS_RIGHTS = VMCS_ENCODE_COMPONENT_FULL_32(14, guest_state),
	GUEST_GS_ACCESS_RIGHTS = VMCS_ENCODE_COMPONENT_FULL_32(15, guest_state),
	GUEST_LDTR_ACCESS_RIGHTS =
	    VMCS_ENCODE_COMPONENT_FULL_32(16, guest_state),
	GUEST_TR_ACCESS_RIGHTS = VMCS_ENCODE_COMPONENT_FULL_32(17, guest_state),
	GUEST_INTERRUPTIBILITY_STATE =
	    VMCS_ENCODE_COMPONENT_FULL_32(18, guest_state),
	GUEST_ACTIVITY_STATE = VMCS_ENCODE_COMPONENT_FULL_32(19, guest_state),
	GUEST_SMBASE = VMCS_ENCODE_COMPONENT_FULL_32(20, guest_state),
	GUEST_IA32_SYSENTER_CS = VMCS_ENCODE_COMPONENT_FULL_32(21, guest_state),
	GUEST_VMX_PREEMPTION_TIMER_VALUE_COND =
	    VMCS_ENCODE_COMPONENT_FULL_32(23, guest_state),

	/* Guest 16-bit fields - only full access */

	GUEST_ES_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(0, guest_state),
	GUEST_CS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(1, guest_state),
	GUEST_SS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(2, guest_state),
	GUEST_DS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(3, guest_state),
	GUEST_FS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(4, guest_state),
	GUEST_GS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(5, guest_state),
	GUEST_LDTR_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(6, guest_state),
	GUEST_TR_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(7, guest_state),
	GUEST_INTERRUPT_STATUS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_16(8, guest_state),
	PML_INDEX_COND = VMCS_ENCODE_COMPONENT_FULL_16(9, guest_state),
	GUEST_UINV_COND = VMCS_ENCODE_COMPONENT_FULL_16(10, guest_state),
};

enum evmm_vmcs_host_encodings {

	/* Host natural-width fields - only full access */

	HOST_CR0 = VMCS_ENCODE_COMPONENT_FULL_NATURAL(0, host_state),
	HOST_CR3 = VMCS_ENCODE_COMPONENT_FULL_NATURAL(1, host_state),
	HOST_CR4 = VMCS_ENCODE_COMPONENT_FULL_NATURAL(2, host_state),
	HOST_FS_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(3, host_state),
	HOST_GS_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(4, host_state),
	HOST_TR_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(5, host_state),
	HOST_GDTR_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(6, host_state),
	HOST_IDTR_BASE = VMCS_ENCODE_COMPONENT_FULL_NATURAL(7, host_state),
	HOST_IA32_SYSENTER_ESP =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(8, host_state),
	HOST_IA32_SYSENTER_EIP =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(9, host_state),
	HOST_RSP = VMCS_ENCODE_COMPONENT_FULL_NATURAL(10, host_state),
	HOST_RIP = VMCS_ENCODE_COMPONENT_FULL_NATURAL(11, host_state),
	HOST_IA32_S_CET_COND =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(12, host_state),
	HOST_SSP_COND = VMCS_ENCODE_COMPONENT_FULL_NATURAL(13, host_state),
	HOST_IA32_INTERRUPT_SSP_TABLE_ADDR_COND =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(14, host_state),

	/* Host 64-bit fields - both full and high access
	 *
	 * Only full access is defined since we are not supporting 32-bit
	 * systems.
	 */

	HOST_IA32_PAT_COND = VMCS_ENCODE_COMPONENT_FULL_64(0, host_state),
	HOST_IA32_EFER_COND = VMCS_ENCODE_COMPONENT_FULL_64(1, host_state),
	HOST_IA32_PERF_GLOBAL_CTRL_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(2, host_state),
	HOST_IA32_PKRS_COND = VMCS_ENCODE_COMPONENT_FULL_64(3, host_state),

	/* Host 32-bit fields - only full access */

	HOST_IA32_SYSENTER_CS = VMCS_ENCODE_COMPONENT_FULL_32(0, host_state),

	/* Host 16-bit fields - only full access */

	HOST_ES_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(0, host_state),
	HOST_CS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(1, host_state),
	HOST_SS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(2, host_state),
	HOST_DS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(3, host_state),
	HOST_FS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(4, host_state),
	HOST_GS_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(5, host_state),
	HOST_TR_SELECTOR = VMCS_ENCODE_COMPONENT_FULL_16(6, host_state),
};

enum evmm_vmcs_control_encodings {
	/* Control natural-width fields - only full access */

	CONTROL_CR0_GUEST_HOST_MASK =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(0, control),
	CONTROL_CR4_GUEST_HOST_MASK =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(1, control),
	CONTROL_CR0_READ_SHADOW =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(2, control),
	CONTROL_CR4_READ_SHADOW =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(3, control),
	CONTROL_CR3_TARGET_VALUE_0 =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(4, control),
	CONTROL_CR3_TARGET_VALUE_1 =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(5, control),
	CONTROL_CR3_TARGET_VALUE_2 =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(6, control),
	CONTROL_CR3_TARGET_VALUE_3_COND =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(7, control),

	/* Control 64-bit fields - only full access
	 *
	 * Only full access is defined since we are not supporting 32-bit
	 * systems.
	 */

	CONTROL_ADDRESS_OF_IO_BITMAP_A =
	    VMCS_ENCODE_COMPONENT_FULL_64(0, control),
	CONTROL_ADDRESS_OF_IO_BITMAP_B =
	    VMCS_ENCODE_COMPONENT_FULL_64(1, control),
	CONTROL_ADDRESS_OF_MSR_BITMAPS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(2, control),
	CONTROL_VM_EXIT_MSR_STORE_ADDRESS =
	    VMCS_ENCODE_COMPONENT_FULL_64(3, control),
	CONTROL_VM_EXIT_MSR_LOAD_ADDRESS =
	    VMCS_ENCODE_COMPONENT_FULL_64(4, control),
	CONTROL_VM_ENTRY_MSR_LOAD_ADDRESS =
	    VMCS_ENCODE_COMPONENT_FULL_64(5, control),
	CONTROL_EXECUTIVE_VMCS_POINTER =
	    VMCS_ENCODE_COMPONENT_FULL_64(6, control),
	CONTROL_PML_ADDRESS_COND = VMCS_ENCODE_COMPONENT_FULL_64(7, control),
	CONTROL_TSC_OFFSET = VMCS_ENCODE_COMPONENT_FULL_64(8, control),
	CONTROL_VIRTUAL_APIC_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(9, control),
	CONTROL_APIC_ACCESS_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(10, control),
	CONTROL_POSTED_INTERRUPT_DESCRIPTOR_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(11, control),
	CONTROL_VM_FUNCTION_CONTROLS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(12, control),
	CONTROL_EPT_POINTER_CONF = VMCS_ENCODE_COMPONENT_FULL_64(13, control),
	CONTROL_EOI_EXIT_BITMAP_0_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(14, control),
	CONTROL_EOI_EXIT_BITMAP_1_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(15, control),
	CONTROL_EOI_EXIT_BITMAP_2_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(16, control),
	CONTROL_EOI_EXIT_BITMAP_3_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(17, control),
	CONTROL_EPTP_LIST_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(18, control),
	CONTROL_VMREAD_BITMAP_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(19, control),
	CONTROL_VMWRITE_BITMAP_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(20, control),
	CONTROL_VIRTUALIZATION_EXCEPTION_INFORMATION_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(21, control),
	CONTROL_XSS_EXITING_BITMAP_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(22, control),
	CONTROL_ENCLS_EXITING_BITMAP_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(23, control),
	CONTROL_SUB_PAGE_PERMISSION_TABLE_POINTER_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(24, control),
	CONTROL_TSC_MULTIPLIER_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(25, control),
	CONTROL_TERTIARY_PROCESSOR_BASED_VM_EXECUTION_CONTROLS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(26, control),
	// index 27 missing
	CONTROL_LOW_PASID_DIRECTORY_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(28, control),
	CONTROL_HIGH_PASID_DIRECTORY_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(29, control),
	CONTROL_SHARED_EPT_POINTER_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(30, control),
	CONTROL_PCONFIG_EXITING_BITMAP_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(31, control),
	CONTROL_HYPERVISOR_MANAGED_LINEAR_ADDRESS_TRANSLATION_POINTER_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(32, control),
	CONTROL_PID_POINTER_TABLE_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(33, control),
	CONTROL_SECONDARY_VM_EXIT_CONTROLS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(34, control),
	// index 35, 36 missing
	CONTROL_IA32_SPEC_CTRL_MASK_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(37, control),
	CONTROL_IA32_SPEC_CTRL_SHADOW_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(38, control),

	/* Control 32-bit fields - only full access */

	CONTROL_PIN_BASED_VM_EXECUTION_CONTROLS =
	    VMCS_ENCODE_COMPONENT_FULL_32(0, control),
	CONTROL_PRIMARY_PROCESSOR_BASED_VM_EXECUTION_CONTROLS =
	    VMCS_ENCODE_COMPONENT_FULL_32(1, control),
	CONTROL_EXCEPTION_BITMAP = VMCS_ENCODE_COMPONENT_FULL_32(2, control),
	CONTROL_PAGE_FAULT_ERROR_CODE_MASK =
	    VMCS_ENCODE_COMPONENT_FULL_32(3, control),
	CONTROL_PAGE_FAULT_ERROR_CODE_MATCH =
	    VMCS_ENCODE_COMPONENT_FULL_32(4, control),
	CONTROL_CR3_TARGET_COUNT = VMCS_ENCODE_COMPONENT_FULL_32(5, control),
	CONTROL_PRIMARY_VM_EXIT_CONTROLS =
	    VMCS_ENCODE_COMPONENT_FULL_32(6, control),
	CONTROL_VM_EXIT_MSR_STORE_COUNT =
	    VMCS_ENCODE_COMPONENT_FULL_32(7, control),
	CONTROL_VM_EXIT_MSR_LOAD_COUNT =
	    VMCS_ENCODE_COMPONENT_FULL_32(8, control),
	CONTROL_VM_ENTRY_CONTROLS = VMCS_ENCODE_COMPONENT_FULL_32(9, control),
	CONTROL_VM_ENTRY_MSR_LOAD_COUNT =
	    VMCS_ENCODE_COMPONENT_FULL_32(10, control),
	CONTROL_VM_ENTRY_INTERRUPTION_INFORMATION_FIELD =
	    VMCS_ENCODE_COMPONENT_FULL_32(11, control),
	CONTROL_VM_ENTRY_EXCEPTION_ERROR_CODE =
	    VMCS_ENCODE_COMPONENT_FULL_32(12, control),
	CONTROL_VM_ENTRY_INSTRUCTION_LENGTH =
	    VMCS_ENCODE_COMPONENT_FULL_32(13, control),
	CONTROL_TPR_THRESHOLD_COND = VMCS_ENCODE_COMPONENT_FULL_32(14, control),
	CONTROL_SECONDARY_PROCESSOR_BASED_VM_EXECUTION_CONTROLS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_32(15, control),
	CONTROL_PLE_GAP_COND = VMCS_ENCODE_COMPONENT_FULL_32(16, control),
	CONTROL_PLE_WINDOW_COND = VMCS_ENCODE_COMPONENT_FULL_32(17, control),
	CONTROL_INSTRUCTION_TIMEOUT_CONTROL_COND =
	    VMCS_ENCODE_COMPONENT_FULL_32(18, control),

	/* Control 16-bit fields - only full access */
	CONTROL_VIRTUAL_PROCESSOR_IDENTIFIER_COND =
	    VMCS_ENCODE_COMPONENT_FULL_16(0, control),
	CONTROL_POSTED_INTERRUPT_NOTIFICATION_VECTOR_COND =
	    VMCS_ENCODE_COMPONENT_FULL_16(1, control),
	CONTROL_EPTP_INDEX_COND = VMCS_ENCODE_COMPONENT_FULL_16(2, control),
	CONTROL_HLAT_PREFIX_SIZE_COND =
	    VMCS_ENCODE_COMPONENT_FULL_16(3, control),
	CONTROL_LAST_PID_POINTER_INDEX_COND =
	    VMCS_ENCODE_COMPONENT_FULL_16(4, control),
};

enum evmm_vmcs_vmexit_info_encodings {
	/* Read-only natural-width fields - only full access */

	VMEXIT_INFO_EXIT_QUALIFICATION =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(0, vmexit_info),
	VMEXIT_INFO_IO_RCX = VMCS_ENCODE_COMPONENT_FULL_NATURAL(1, vmexit_info),
	VMEXIT_INFO_IO_RSI = VMCS_ENCODE_COMPONENT_FULL_NATURAL(2, vmexit_info),
	VMEXIT_INFO_IO_RDI = VMCS_ENCODE_COMPONENT_FULL_NATURAL(3, vmexit_info),
	VMEXIT_INFO_IO_RIP = VMCS_ENCODE_COMPONENT_FULL_NATURAL(4, vmexit_info),
	VMEXIT_INFO_GUEST_LINEAR_ADDRESS =
	    VMCS_ENCODE_COMPONENT_FULL_NATURAL(5, vmexit_info),

	/* Read-only 64-bit fields - only full access
	 *
	 * Only full access is defined since we are not supporting 32-bit
	 * systems.
	 */

	VMEXIT_INFO_GUEST_PHYSICAL_ADDRESS_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(0, vmexit_info),
	VMEXIT_INFO_MSR_DATA_COND =
	    VMCS_ENCODE_COMPONENT_FULL_64(1, vmexit_info),

	/* Read-only 32-bit fields - only full access */

	VMEXIT_INFO_VM_INSTRUCTION_ERROR =
	    VMCS_ENCODE_COMPONENT_FULL_32(0, vmexit_info),
	VMEXIT_INFO_EXIT_REASON = VMCS_ENCODE_COMPONENT_FULL_32(1, vmexit_info),
	VMEXIT_INFO_VM_EXIT_INTERRUPTION_INFORMATION =
	    VMCS_ENCODE_COMPONENT_FULL_32(2, vmexit_info),
	VMEXIT_INFO_VM_EXIT_INTERRUPTION_ERROR_CODE =
	    VMCS_ENCODE_COMPONENT_FULL_32(3, vmexit_info),
	VMEXIT_INFO_IDT_VECTORING_INFORMATION_FIELD =
	    VMCS_ENCODE_COMPONENT_FULL_32(4, vmexit_info),
	VMEXIT_INFO_IDT_VECTORING_ERROR_CODE =
	    VMCS_ENCODE_COMPONENT_FULL_32(5, vmexit_info),
	VMEXIT_INFO_VM_EXIT_INSTRUCTION_LENGTH =
	    VMCS_ENCODE_COMPONENT_FULL_32(6, vmexit_info),
	VMEXIT_INFO_VM_EXIT_INSTRUCTION_INFORMATION =
	    VMCS_ENCODE_COMPONENT_FULL_32(7, vmexit_info),

	/* No read-only 16-bit fields are available */

};
